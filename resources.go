// Code generated for package main by go-bindata DO NOT EDIT. (@generated)
// sources:
// assets/templates/endpoint.tmpl
// assets/templates/helper.tmpl
// assets/templates/migration.tmpl
// assets/templates/model.tmpl
// assets/templates/server.tmpl
// assets/templates/service.tmpl
// assets/templates/transport.tmpl
package main

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

// Name return file name
func (fi bindataFileInfo) Name() string {
	return fi.name
}

// Size return file size
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}

// Mode return file mode
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}

// Mode return file modify time
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}

// IsDir return file whether a directory
func (fi bindataFileInfo) IsDir() bool {
	return fi.mode&os.ModeDir != 0
}

// Sys return file is sys mode
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _assetsTemplatesEndpointTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x95\x41\x6f\x1a\x3d\x10\x86\xcf\xeb\x5f\x31\xe1\x10\x79\x23\x64\xee\x91\x38\x7c\x1f\xa9\xaa\xb6\x51\x82\x82\xda\x9e\xad\xdd\x61\x71\xd9\xda\xbb\xe3\x31\x10\xa1\xfd\xef\x95\xd9\x44\x2d\xa5\xec\x56\x11\x95\xe0\x06\xe3\xf1\xcb\xcc\x3b\xcf\x98\x4a\x67\x4b\x5d\x20\x6c\xb7\xa0\x66\x48\x2b\x93\xe1\x74\x59\x4c\x35\x2f\xa0\x69\x84\x30\xdf\x2b\x47\x0c\x52\x24\x03\xb4\x99\xcb\x8d\x2d\x46\xdf\xbc\xb3\x83\x18\x20\x72\xe4\xe3\x27\x8b\x3c\x5a\x30\x57\x03\x91\x0a\x31\x0f\x36\x03\xa9\xe1\xe6\xbf\xc0\x8b\x14\x26\x84\x9a\x71\xbb\x55\x33\x63\x8b\x50\x6a\x9a\x6a\x9f\xe9\x72\xa2\x3d\x36\xcd\xc7\xd9\xe3\x83\x5c\x43\xbc\xab\x9e\xd0\x57\xce\x7a\xfc\x4a\x86\x91\x86\x40\x70\xf3\x12\xaf\x03\x7a\x4e\x61\x2b\x92\x95\x26\x20\xac\xbb\x45\x9f\xb0\x7e\xcd\xf4\x7d\x99\x5e\x88\x64\x34\x82\x3b\xcc\x5c\x8e\x22\x41\x22\xb8\x1d\x43\xec\x50\x3d\xe0\xba\x0d\x93\x24\xf5\xbf\xcb\x9f\x53\xd5\x7e\x97\xd7\x84\x75\x2a\x12\x33\x87\x98\x7f\x35\x06\x6b\xca\x58\x5d\xa2\xd5\xbd\x2b\x64\xaa\xde\x45\x67\x24\x12\xa5\xbb\xe0\x3a\x76\xf4\xda\x9e\x5c\x0f\x63\x61\xf1\x84\x90\x03\x59\x91\x34\x6d\x11\x2f\xf6\xb7\x55\x8c\x41\xab\xce\xda\x25\x61\x3d\x84\xeb\x56\xea\xd4\xa5\x3c\x06\xae\x02\x8b\xa3\x17\x9a\x83\x31\xbf\x47\x8e\x08\x4d\xcb\x40\xba\xfc\x59\x27\xbc\x7d\xc6\xc7\x15\xf7\x06\xdc\x95\xe6\xff\x60\xec\x6d\x74\xf6\xf8\xa5\x73\xb4\xf5\xa4\xab\x73\x5c\xf1\xd0\xd6\x8e\xa5\xc9\x78\x13\xad\x24\x35\x71\x96\x71\xc3\x32\x15\x89\x2f\x43\x31\x04\xb7\x8c\x07\x19\x6f\xd4\x17\x5d\x06\x94\xbf\xc8\xdc\xbb\x35\x52\xb6\x53\x99\xf0\xe6\x13\x3e\xa7\x4a\x7a\x26\x63\x8b\xd6\xec\x2b\xb7\xdc\xb9\x8c\x51\xa1\x7d\x5e\xe2\x1a\xca\x81\xb1\x2b\x5d\x9a\x1c\xe2\x2f\x0c\xd2\xc3\x39\xbc\x6d\xcf\x08\x6b\x35\x2b\x43\x01\xe3\x9d\xf0\xef\x7c\x5c\xc2\xda\x7d\xae\xf2\xd3\xbf\xae\x9d\xa2\x7b\x94\xf4\x64\x5e\x38\x28\xe7\xf5\xaf\x10\x69\xfd\x90\xa3\x65\x33\x37\x48\x87\xe0\x46\x6e\x3b\xe7\x71\x66\xe8\xde\x61\x89\x27\x47\xb7\x53\x74\x0f\xdd\x9e\xcc\x0b\x47\xf7\xaf\xa9\xd9\x3d\x77\x9d\x5e\xf4\x60\xf3\x6f\xfb\xe8\xc7\xea\x47\x00\x00\x00\xff\xff\xfa\x0d\xb2\xa1\xc1\x0a\x00\x00")

func assetsTemplatesEndpointTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesEndpointTmpl,
		"assets/templates/endpoint.tmpl",
	)
}

func assetsTemplatesEndpointTmpl() (*asset, error) {
	bytes, err := assetsTemplatesEndpointTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/endpoint.tmpl", size: 2753, mode: os.FileMode(436), modTime: time.Unix(1571951687, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesHelperTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x57\x51\x6f\x9b\x3a\x14\x7e\x86\x5f\x71\x6e\xd4\x87\x50\x51\x78\x8f\x94\x87\xab\xb6\xba\xea\x95\xda\x45\x4d\xf7\x54\x55\x93\x03\x07\x8a\x62\x1b\x62\x9b\x4e\x1d\xf2\x7f\x9f\x6c\x48\x06\x59\x80\xae\xcd\xaa\x4d\x6a\xa5\x4a\x18\x7f\x3e\x07\x7f\xe7\x3b\x9f\x9d\x82\x44\x6b\x92\x22\x54\x55\xb0\x44\xf1\x94\x45\xb8\x58\xa7\x0b\xa2\x1e\xb5\x76\xdd\x8c\x15\xb9\x50\x30\x75\x9d\x49\x9a\x29\x4a\x56\x41\x94\xb3\x90\x65\x6b\x91\x7f\xc5\x6f\x48\xc3\x15\x89\xd6\xc8\xe3\x30\x5e\x4d\x46\x31\xa9\x20\x3c\x8b\x48\x98\x71\x85\x82\x13\x1a\xb2\x3c\x46\x3a\x71\x1d\x06\x23\x2b\x1b\xa0\xe7\xba\x49\xc9\x23\x98\x0a\xdc\xc0\xe9\xb9\x40\xa2\xd0\x7c\x76\xc6\xd3\x92\x12\xb1\x20\x32\x22\xf4\x9c\x48\xd4\xfa\x16\x37\x1e\xa8\xfc\xda\x2c\x9c\x7a\x60\x03\x04\x3d\x58\xa8\x5c\x47\xa0\x2a\x05\x1f\xc6\x55\xae\xe3\x54\xd5\x19\x08\xc2\x53\x84\x93\x35\x3e\xfb\x70\x52\x88\xbc\x80\xd9\x1c\x82\x85\xc8\x8b\x0b\x4c\xa4\xd6\x0d\x2c\x4b\x80\xe7\xaa\x46\x04\x57\xf2\x92\xad\x30\x8e\x31\x6e\xcf\xe3\xa6\x99\x5e\x92\x04\xef\x9e\x0b\xbc\x26\x6b\x14\x30\x99\x34\xa0\x7a\xf2\x86\x30\xd4\x7a\x06\x02\x37\xc1\xf6\xdd\xa1\xef\xf3\x5d\x00\x00\x13\x1a\xa9\x19\x1f\x08\xb1\x5b\xde\xce\xa7\xf5\x74\x2c\xb4\xd7\x8a\xcd\xcd\x16\xba\xa3\x7a\x43\xcd\xb3\x76\xf5\x8f\x3a\xc9\xd1\x3a\x49\x0f\x12\x91\xb3\xba\x52\x0c\x4e\x07\x4b\xe0\x03\x93\x29\x48\x25\x32\x9e\xfa\x80\x42\x98\xff\x5c\x78\xa6\x84\x59\x02\x0c\xfe\x99\x03\xcf\xa8\x19\x3a\x02\x65\x6f\xc5\xe7\xf0\xfe\x35\xb6\x3b\x34\xa4\xf7\xd5\x97\x05\xdd\x37\xfe\x96\xd7\xbe\x6a\xee\x2f\xd8\x0d\x77\xa9\x5a\x41\x7e\x2e\x54\xe7\xd9\x16\xce\x72\x76\x2d\x53\x98\x1b\x9e\x2d\xa5\x86\xe3\x3d\x52\x2f\x0d\xe5\x30\x37\x53\xf5\xf3\xd4\x6b\xaa\x1e\x86\x90\xa2\xaa\xaa\x60\x41\x4b\x41\x68\x87\xf2\xb3\xb7\xff\xb5\x55\xf5\x5f\x4f\x9e\x7d\x41\x49\xb8\x7f\x78\xb5\xa4\x04\xca\xc3\x9b\x99\xcd\xe1\xfe\xa1\x4f\x42\xda\x75\x92\x5c\xc0\x17\x1f\x98\x01\xd6\x52\x62\x72\xcb\x9f\x79\x37\xa0\xbe\xba\xaf\x5e\xa0\xbf\x1a\x38\xa4\xc0\x1d\xa2\x5f\x83\x00\x2f\x51\xe1\x9e\xab\x8c\x2f\xea\x53\xe2\xbe\x85\x74\x4d\xa4\x3b\xd2\x35\x5d\x87\x0b\x30\x07\x52\x14\xc8\xe3\x69\x1f\xc2\x07\x81\xd2\xdb\x89\xba\x2f\x4a\xdf\xf2\xe3\xb5\xc2\x41\xff\x39\x42\x33\xb4\xda\x61\xb3\x6d\x87\xf7\x3c\x09\xaf\x62\xe4\x2a\x4b\xb2\x88\xa8\x2c\xe7\x46\x02\xdd\x37\x06\xe3\x2c\x69\x99\xce\x20\x5e\x05\x77\xf9\x4d\x49\xe9\xd2\x76\x99\x3d\x6d\xb6\x60\x14\x81\x01\x79\x46\x1d\x46\x22\xfb\xa7\xc7\xd0\xc6\xfe\xbc\xa3\xe3\xa3\x79\x8f\x7c\x9c\x94\x45\xdc\x7f\x79\x38\x42\x1b\x35\x52\x23\x70\xfa\x6f\xa9\x1e\x3d\x60\x64\x8d\x9f\x87\x72\xde\xa2\xfc\x7f\xf9\xe9\xe6\xf5\x72\x9b\xde\x3f\xac\x9e\x15\xfa\xdd\x63\xc6\x28\x64\x2c\x6f\xd5\x30\xda\xd2\xbc\xcd\x62\x43\x79\xbb\xce\x25\x81\xca\xed\x27\x0e\xa8\xd8\x6b\xe8\x6d\x7c\x01\x22\x7b\x47\x93\x40\xfa\xc4\x5d\xfb\x81\x6d\x37\x50\x82\x70\x69\x7f\x17\x3c\x11\x5a\xa2\x0c\xda\x46\x34\xb2\x89\xbf\xca\x8b\x3e\x6e\xfb\xbf\x7e\xdb\x1f\x13\xf1\x87\x65\x8f\x59\x36\x84\xe1\x01\x03\x3e\x9a\x91\xc3\x58\xfc\x83\x7e\xfe\x7b\xdc\x3d\x46\x8a\xef\xe0\xee\x56\x98\x17\x43\xb9\x8e\x28\xcc\xb7\xb1\xf2\x3d\x00\x00\xff\xff\xaa\xc9\x4f\x9d\x8e\x11\x00\x00")

func assetsTemplatesHelperTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesHelperTmpl,
		"assets/templates/helper.tmpl",
	)
}

func assetsTemplatesHelperTmpl() (*asset, error) {
	bytes, err := assetsTemplatesHelperTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/helper.tmpl", size: 4494, mode: os.FileMode(436), modTime: time.Unix(1571960982, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesMigrationTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x91\xcf\x6b\xea\x40\x10\xc7\xcf\x99\xbf\x62\x5e\xf0\x90\x3c\x34\x81\x77\x14\x3c\x3c\x6c\xe9\x55\xd0\x63\xa1\xae\x71\xdc\x2e\xee\x0f\x3b\x3b\x42\x4a\xc8\xff\x5e\x36\x15\x6a\x5b\x5a\x2d\xf4\x98\xef\x64\x3e\xfb\x65\x3e\x07\xd5\xec\x95\x26\x74\x46\xb3\x12\x13\x3c\xd4\xf5\xea\xd1\x44\x6c\x82\xa3\x88\x3b\x0e\x0e\x75\x98\x6c\x8c\xdf\x2a\x51\x60\xdc\x21\xb0\x60\x6e\x83\xce\x01\xea\x1a\xe7\x4c\x4a\xa8\xeb\x26\x58\x2d\xec\x91\x95\x5d\xa8\xd8\x28\x3b\x57\x91\x70\xd2\xf7\x2b\xb5\xb1\xe7\xf0\xdd\xd1\x37\x58\x38\xfc\xeb\x8c\x2e\xaf\x5a\x2e\x4a\x24\xe6\xc0\xd8\x41\x26\x2d\x4e\x67\xe8\xaa\x3b\x92\x55\x5b\x94\x00\x59\x94\x94\xac\x07\xc4\x2b\x6d\x29\x4a\xc8\x91\x97\x44\x58\x03\x64\x69\x96\xdf\xfb\x3c\x7d\x03\x64\x0f\xe3\xc4\xc3\x19\x4a\x5b\xdd\xb6\xd4\x14\x51\x4a\xc8\xcc\x6e\x48\xff\xcc\xd0\x1b\x9b\x9e\xca\x98\xe4\xc8\x3e\xa5\x90\xf5\x9f\x31\x5d\x87\xac\xbc\x26\x1c\xed\xe9\xf9\xdf\x18\x47\xf1\xc9\x2e\x85\x8d\xd7\xa9\x50\xf5\xdf\x0a\xf1\x5b\x95\xbe\x07\xc4\x28\x78\xaa\x7a\xf6\xf3\x6f\x96\x4c\xa5\xc8\x6f\x71\x40\x9c\x46\xde\x58\xe8\x07\x53\x37\x1c\x0e\x17\x3c\x71\xb0\x76\xa3\x9a\xfd\x07\x4d\x97\x37\xaf\x97\x94\x58\xdf\x2b\xfa\xe2\x16\xd3\x1f\x1b\x7b\x77\x81\x97\x00\x00\x00\xff\xff\x81\xdf\x2a\x26\xe8\x02\x00\x00")

func assetsTemplatesMigrationTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesMigrationTmpl,
		"assets/templates/migration.tmpl",
	)
}

func assetsTemplatesMigrationTmpl() (*asset, error) {
	bytes, err := assetsTemplatesMigrationTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/migration.tmpl", size: 744, mode: os.FileMode(436), modTime: time.Unix(1571782333, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesModelTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xac\x53\xcb\x6e\xdb\x30\x10\x3c\x8b\x5f\xb1\x10\x02\xc4\x2e\x52\xea\x1e\xa0\x87\xc0\xed\x21\x40\x53\xa4\x75\xdb\x73\x68\x72\x25\xb3\x22\xb9\xea\x92\x44\xe2\x1a\xfa\xf7\x42\x8f\xa4\xce\xc3\xcd\x25\x37\x89\xbb\x3b\x33\x9c\x1d\x76\x4a\xb7\xaa\x41\xf0\x64\xd0\x09\x61\x7d\x47\x9c\x60\x21\x00\xca\xc6\xa6\x6d\xde\x48\x4d\xbe\x8a\x2a\x11\xdb\xaa\x21\x99\xb3\x35\xa5\x28\xfc\x58\x76\x6a\x2a\x7b\xdb\x32\xdd\xe2\x1f\x74\xd5\x46\xe9\x16\x83\xa9\x46\xbc\x52\x2c\x85\x48\xbb\x0e\x61\x21\x8a\xaa\x82\xfd\x5e\xae\x6d\x68\xb2\x53\x7c\xad\xa2\x56\x6e\xa5\x22\xf6\xfd\x4c\x5e\x1c\x2b\xc7\xc4\x59\x27\xd8\x8b\xa2\xf0\xf2\xd2\x60\x48\xb6\xb6\x5a\x25\x4b\x41\x14\xc5\x7e\xff\x1e\x58\x85\x06\xe1\xa4\xc5\xdd\x19\x9c\x74\x4c\x1d\x9c\x7f\x00\x79\xcd\xd4\x7d\xc4\x3a\xf6\xfd\xdc\x66\x6b\x08\x94\xa6\x0e\x79\x19\x3f\xf9\x0d\x1a\x83\x66\xae\x4f\xc7\x5f\x94\x1f\x38\xef\x7f\xd7\xaa\xc6\xef\xbb\x6e\x38\xba\x31\x9b\xf3\xf2\xe1\xfc\xeb\xe7\x15\xb9\xec\x43\xdf\x97\xf0\x2b\x52\x38\x28\xcd\x77\x58\x29\x8f\xf3\x15\xce\xc8\xdb\x84\xbe\x4b\xbb\xf2\x66\xd6\x82\xc1\x3c\xe8\x9a\xbe\x01\x00\xbc\xbc\xc8\xc6\x26\x51\xf4\x83\x75\x55\x05\x6b\x4c\x2b\x46\x95\xf0\xa7\x72\x19\x23\xd4\xc4\x93\x5d\x52\xd4\x39\x68\x58\x1c\x98\x76\x40\x08\xef\x8e\x98\xb9\x7c\x8a\xb8\x58\x02\x32\x13\xc3\x5e\x00\x54\x15\x7c\xc3\xce\x29\x8d\x70\xfa\x32\xf0\xe8\x8f\x5c\x27\xb6\xa1\x39\x1d\xd5\xa8\x40\x69\x8b\x0c\x39\xd8\xdf\x19\xc1\xce\xfb\x41\x9e\xf0\x2e\x6b\x18\x46\xc0\x10\xc6\xd1\x7d\xbc\xb3\x31\x01\x31\xec\x28\x43\xc7\x58\xe3\x3f\x0c\x0a\x28\xe7\xb1\x04\xb7\xd6\x39\xd8\x20\xe4\x88\x66\x64\x5a\xbb\xdc\x40\x83\x01\x79\xdc\xfd\xdc\x79\x01\x9d\x53\x36\x0c\x29\xb1\xa1\x99\xa6\x94\x8b\x04\xb7\xc4\x2d\x6c\x72\x02\x3b\x63\x79\xd5\x22\x38\xa2\x16\xa2\xf5\xd6\x29\x06\xe5\x1c\x44\x97\x9b\xc9\x57\x54\x7a\x0b\x36\xc4\xa4\x82\xc6\x09\x9c\x6a\x48\x5b\x1b\x81\x31\x52\x66\x8d\x72\xcc\xb1\x95\x28\xcf\xe1\x65\x83\xae\xeb\xbb\x21\x7c\xe5\x00\xdb\xd5\x77\xe5\xa3\x58\x3f\xef\x7b\xdd\xe5\x63\x00\x4f\x5e\x82\x7c\xba\xd7\xa3\xb4\xcb\xa3\x88\x63\xf6\x9e\x01\x2d\x45\xc1\x98\x32\x07\x08\xd6\x89\xfe\x3e\x96\x3f\x3a\xf3\xc6\xb1\x3c\x44\x3c\x88\xe5\xab\x6a\x1f\xcf\xbd\xa0\xf6\x4a\x25\xbd\x05\x4d\xc1\xd8\xc1\xaa\x37\x50\x3b\x22\x2e\x92\xfe\x4f\xcb\x86\xc8\x0d\xea\x79\x5e\xf3\xd5\x40\x38\xce\xad\x68\x7a\xfb\xb3\x4e\x16\xbd\xf8\x1b\x00\x00\xff\xff\xff\xac\x9f\x2b\x87\x05\x00\x00")

func assetsTemplatesModelTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesModelTmpl,
		"assets/templates/model.tmpl",
	)
}

func assetsTemplatesModelTmpl() (*asset, error) {
	bytes, err := assetsTemplatesModelTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/model.tmpl", size: 1415, mode: os.FileMode(436), modTime: time.Unix(1571952138, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesServerTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x54\xc1\x4e\xdc\x30\x10\x3d\xaf\xbf\x62\xe4\x4b\x13\x14\xb2\xf7\x4a\x1c\xd0\x56\x85\x16\xd4\x46\x0b\x5b\xce\xc6\x99\xdd\x58\x24\x76\x18\x8f\x61\xa3\x55\xfe\xbd\xb2\xc3\xc2\x52\x15\x4a\x0f\x91\xe2\xc9\xbc\xe7\xf7\x9e\x3d\xe9\x95\xbe\x53\x1b\x84\xdd\x0e\xca\x2b\xa4\x07\xa3\xb1\xba\xdb\x54\x8a\x1b\x18\x47\x21\x4c\xd7\x3b\x62\xc8\xc4\x4c\x6a\x67\x19\xb7\x2c\xc5\x4c\x5a\xe4\x79\xc3\xdc\x4b\x21\x66\x72\x63\xb8\x09\xb7\xa5\x76\xdd\x7c\xe3\x8e\x75\x63\xe6\xba\x31\x52\xe4\x42\xcc\xe7\x70\xda\xf7\x68\x6b\xe0\xc6\x78\x60\x07\x1e\xe9\x01\x09\xd6\xa6\xc5\x32\x7e\x5e\x79\x04\xe5\x41\x01\xe1\x1a\x09\xad\xc6\x02\x0c\x03\x74\x6a\x00\xc2\xfb\x60\x08\xc1\xbb\x0e\x01\x6b\xc3\x65\x62\x5c\xb8\xae\x43\xcb\x13\xa5\x59\x83\x6a\x09\x55\x3d\x40\x8d\x6b\x63\xb1\x4e\xb4\x3c\xf4\x08\x4f\x7a\x2f\x70\x00\xcf\x64\xec\x46\x08\xed\xac\x4f\x66\x92\x5b\x63\x37\xa1\x55\x74\xe9\x1e\x91\xb4\xf2\x08\xe3\xb8\xe0\x6d\xec\x3f\x80\x9e\x80\x7c\xab\x79\xef\x71\x89\x7d\xab\x34\x42\xa6\xe1\x68\xe1\x2c\x2b\x63\x91\x72\xb8\x1d\x60\x70\x81\x40\x07\xcf\xae\x8b\x1a\x82\xe6\xd8\xef\x28\x6e\xf0\x80\x14\x4d\x20\x74\xc8\x8d\xab\xc1\x58\x76\xa0\x60\x1d\x34\x1b\x67\xa3\xb3\xc1\x05\xa8\x9d\xfd\xc4\x60\x11\xeb\x18\x9f\x62\x56\xba\x81\x18\xc5\x3a\x58\xfd\xe7\x8e\x9d\xba\xc3\x53\xad\x5d\xb0\x7c\x5a\x7d\x5b\xba\xc0\x48\x59\xaf\x28\xc6\xa5\x1b\x53\x4e\x95\xfc\xe0\x1d\x76\x62\x46\xc8\x81\x2c\x4c\x7d\x53\x3d\x93\xf3\x68\xba\x6a\x03\xa9\xf6\x95\xe5\x02\xe2\xc6\x99\x6e\x5e\x11\xee\xc4\x6c\xa6\x9b\xb2\x72\x9e\x33\x39\x97\x05\xe8\x72\x41\xa8\x18\x0f\xa3\xab\x94\xd7\xaa\x5d\x4c\x44\xdf\xaf\x7e\xfe\xc8\x27\xd4\x19\x3e\x83\xce\x90\x3f\x82\x78\xd1\x28\x77\x72\x1c\xdf\x3a\x9f\xdd\x4e\x8e\xf2\x45\xb3\xff\x8b\xe8\x99\xd7\x4d\xb9\xf2\x98\xbd\x73\x21\xf2\x7d\xdf\x7f\x0a\x4d\x98\x2a\x3c\x63\x56\x7d\xfd\x91\x44\x12\xec\x0b\xb6\x98\x2c\x26\xe4\xb4\xfa\x27\x72\xcc\x45\x7c\x46\x31\x5d\x8e\x77\x2c\x65\x16\xb7\x0c\x71\x82\xcb\x73\x65\xeb\x36\xc6\x71\xb8\x3a\xb8\x16\x87\xe5\xaf\x31\xc6\x94\xe5\xe3\x54\x5f\xa2\xef\x9d\xf5\x78\x43\x86\x91\x0a\x20\x38\x7a\xaa\xdf\x07\xf4\x3c\x65\xec\xdb\xb0\x81\xcf\x27\x29\xfb\xd5\xf2\xb2\x52\xa4\xba\x8c\x8a\xb7\xe7\xea\x38\x22\x64\x3a\x6b\xde\x26\xe4\x34\x8e\xe5\x8d\xe1\xe6\x97\x6a\x03\x66\x54\x2e\xa6\x5a\x96\x17\xef\x19\xbd\xc0\xa1\x80\x48\x17\xd9\xa2\xe9\xf4\x8f\xc3\xf3\xeb\xeb\x2a\x7b\x2c\x80\x12\xe5\x9e\x4a\xf3\x36\xdf\x47\xf8\x3b\x00\x00\xff\xff\x8a\x21\x63\x49\x17\x05\x00\x00")

func assetsTemplatesServerTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesServerTmpl,
		"assets/templates/server.tmpl",
	)
}

func assetsTemplatesServerTmpl() (*asset, error) {
	bytes, err := assetsTemplatesServerTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/server.tmpl", size: 1303, mode: os.FileMode(436), modTime: time.Unix(1571855180, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesServiceTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\xcd\x41\x0a\xc2\x30\x10\x85\xe1\x75\xe7\x14\x8f\xae\x74\xd5\x13\xb8\x10\xf1\x08\x1e\x20\x64\x5e\x4b\x20\x9d\x48\x1c\x17\xbd\xbd\x48\x40\x89\xd2\xed\xff\x3e\x78\x12\x8b\x3d\x1c\x07\x01\xa6\x09\x37\x8b\x65\x5d\x69\x8e\x34\x23\xe4\xca\xa0\x1b\x94\x73\x32\xaa\x0c\xb1\x32\x38\xaf\xb5\xe2\x84\xf1\x12\xcc\x8a\xa3\x35\xd0\x3c\xf9\x36\xca\xb0\xd0\xcf\x39\xf7\x66\xa1\x77\xe0\xbd\x02\x7b\xe0\x79\xd7\xbf\x97\xd6\xbe\x46\x99\xf9\x6b\x5a\xfb\x98\xa3\xbc\x02\x00\x00\xff\xff\x5f\xbb\xa6\x96\xdb\x00\x00\x00")

func assetsTemplatesServiceTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesServiceTmpl,
		"assets/templates/service.tmpl",
	)
}

func assetsTemplatesServiceTmpl() (*asset, error) {
	bytes, err := assetsTemplatesServiceTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/service.tmpl", size: 219, mode: os.FileMode(436), modTime: time.Unix(1571951672, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _assetsTemplatesTransportTmpl = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x93\x4f\x6b\xdb\x30\x14\xc0\xcf\xd1\xa7\x78\x84\x1e\x36\xe8\x9c\x7b\x61\xa7\xb4\x8c\x1e\x36\xcc\xfe\x9c\xc6\xa0\xaa\xf5\xa2\x6a\xb1\x25\xf5\xe9\x69\x10\x8c\xbe\xfb\xc8\x6c\x6f\x8d\x56\x27\x0a\x8c\xf5\x66\x4b\x3f\xbd\x3f\x3f\x3d\x79\xd9\x6c\xa5\x46\xe8\x7b\xa8\x3e\x21\xfd\x30\x0d\xd6\x5b\x5d\x4b\x7e\x80\x94\x84\x30\x9d\x77\xc4\xf0\x4a\x2c\x62\x34\x0a\x96\xda\xf0\x43\xbc\xaf\x1a\xd7\xad\x82\x64\x47\x66\xa5\x5d\xb5\xdf\x5a\x8a\xd7\x42\xf0\xce\xe3\x9e\x5d\xad\x86\x78\xc6\xea\xd8\x4a\xaa\x65\x68\x64\xbb\x96\x01\x21\x25\x20\x7c\x8c\x18\x18\xa4\x55\x40\x18\xbc\xb3\x01\x41\x49\x96\x95\x58\xcc\x9f\x0a\x4c\xb1\x61\xe8\xc5\x62\xd1\xf7\x6f\x80\xa4\xd5\x08\x17\x5b\xdc\x5d\xc2\x85\x27\xe7\xe1\xea\x2d\x54\x35\x39\x7f\x8d\x9b\x90\xd2\x88\x99\x0d\x58\xc7\x03\x51\xdd\x86\x9b\xee\x1e\x95\x42\x35\xee\x0f\xcb\x1f\x64\x87\x29\xc1\xf4\xfb\x79\xe7\xf7\xbf\x77\xdf\x83\xb3\x57\xcb\x69\x75\x2a\x6a\x2d\x3b\xfc\x55\x53\x4a\x97\xae\x33\x8c\x9d\xe7\xdd\xf2\x6e\x4c\x87\x56\xfd\x4e\x3d\x7e\x27\x31\x74\x55\xb7\x91\x64\x7b\xd8\xd3\xd7\x6f\xcf\xf7\x9b\x52\x26\x73\x4d\x28\x19\x67\xe5\x7c\xc4\x47\x30\xd6\x47\x9e\x34\x16\xf0\x07\x3e\x67\xb8\xa1\xfa\x92\xfc\x01\x5c\xe4\x73\x0a\x08\x85\x05\x2c\xde\x07\x0d\xb0\x87\x8d\xd5\xd3\xa5\x74\x41\x67\xf2\x6f\x88\x1c\x65\x14\x12\x1d\x52\xb9\xd5\x77\xc8\x33\x37\xf3\x97\xd0\xe3\xe8\x9f\x56\x46\x5f\xc7\xf0\x5c\xd5\x71\x36\xb3\xf4\x0c\xf5\x5f\x1c\x95\x8d\xdd\x29\xf8\x49\x33\xb7\x0a\x2d\x9b\x8d\x41\xca\xa5\x15\x4e\xd8\x29\xfa\xe5\xc7\xeb\x8b\x57\x67\x3d\xda\x02\x7e\x46\x60\xc1\x0b\x3e\x19\x3c\xf7\x5b\x70\xe0\xe5\x15\x5f\x63\x8b\xe7\x28\x2e\xe0\x8f\xcf\xe8\xc9\x00\xb9\xc6\x82\x03\x4f\x32\xfe\x63\x55\x3f\x03\x00\x00\xff\xff\x4b\x44\x14\xa6\xdc\x07\x00\x00")

func assetsTemplatesTransportTmplBytes() ([]byte, error) {
	return bindataRead(
		_assetsTemplatesTransportTmpl,
		"assets/templates/transport.tmpl",
	)
}

func assetsTemplatesTransportTmpl() (*asset, error) {
	bytes, err := assetsTemplatesTransportTmplBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "assets/templates/transport.tmpl", size: 2012, mode: os.FileMode(436), modTime: time.Unix(1571960619, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"assets/templates/endpoint.tmpl":  assetsTemplatesEndpointTmpl,
	"assets/templates/helper.tmpl":    assetsTemplatesHelperTmpl,
	"assets/templates/migration.tmpl": assetsTemplatesMigrationTmpl,
	"assets/templates/model.tmpl":     assetsTemplatesModelTmpl,
	"assets/templates/server.tmpl":    assetsTemplatesServerTmpl,
	"assets/templates/service.tmpl":   assetsTemplatesServiceTmpl,
	"assets/templates/transport.tmpl": assetsTemplatesTransportTmpl,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"assets": &bintree{nil, map[string]*bintree{
		"templates": &bintree{nil, map[string]*bintree{
			"endpoint.tmpl":  &bintree{assetsTemplatesEndpointTmpl, map[string]*bintree{}},
			"helper.tmpl":    &bintree{assetsTemplatesHelperTmpl, map[string]*bintree{}},
			"migration.tmpl": &bintree{assetsTemplatesMigrationTmpl, map[string]*bintree{}},
			"model.tmpl":     &bintree{assetsTemplatesModelTmpl, map[string]*bintree{}},
			"server.tmpl":    &bintree{assetsTemplatesServerTmpl, map[string]*bintree{}},
			"service.tmpl":   &bintree{assetsTemplatesServiceTmpl, map[string]*bintree{}},
			"transport.tmpl": &bintree{assetsTemplatesTransportTmpl, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
